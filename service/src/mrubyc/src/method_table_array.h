/* Auto generated by make_method_table.rb */
#include "symbol_builtin.h"
struct RClass *mrbc_init_class_array(struct VM *vm)
{
  static const mrbc_sym method_symbols[] = {
    MRBC_SYMID_PLUS,
    MRBC_SYMID_LT_LT,
    MRBC_SYMID_BL_BR,
    MRBC_SYMID_BL_BR_EQ,
    MRBC_SYMID_at,
    MRBC_SYMID_clear,
    MRBC_SYMID_count,
    MRBC_SYMID_delete_at,
    MRBC_SYMID_dup,
    MRBC_SYMID_empty_Q,
    MRBC_SYMID_first,
    MRBC_SYMID_include_Q,
    MRBC_SYMID_index,
#if MRBC_USE_STRING
    MRBC_SYMID_inspect,
#endif
#if MRBC_USE_STRING
    MRBC_SYMID_join,
#endif
    MRBC_SYMID_last,
    MRBC_SYMID_length,
    MRBC_SYMID_max,
    MRBC_SYMID_min,
    MRBC_SYMID_minmax,
    MRBC_SYMID_new,
    MRBC_SYMID_pop,
    MRBC_SYMID_push,
    MRBC_SYMID_shift,
    MRBC_SYMID_size,
#if MRBC_USE_STRING
    MRBC_SYMID_to_s,
#endif
    MRBC_SYMID_unshift,
  };
  static const mrbc_func_t method_functions[] = {
    c_array_add,
    c_array_push,
    c_array_get,
    c_array_set,
    c_array_get,
    c_array_clear,
    c_array_size,
    c_array_delete_at,
    c_array_dup,
    c_array_empty,
    c_array_first,
    c_array_include,
    c_array_index,
#if MRBC_USE_STRING
    c_array_inspect,
#endif
#if MRBC_USE_STRING
    c_array_join,
#endif
    c_array_last,
    c_array_size,
    c_array_max,
    c_array_min,
    c_array_minmax,
    c_array_new,
    c_array_pop,
    c_array_push,
    c_array_shift,
    c_array_size,
#if MRBC_USE_STRING
    c_array_inspect,
#endif
    c_array_unshift,
  };

  return mrbc_define_builtin_class("Array", mrbc_class_object, method_symbols, method_functions, sizeof(method_symbols)/sizeof(mrbc_sym) );
}
